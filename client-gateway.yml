
spring:
  application:
    name: client-gateway #name should be equal to bootstrap's one
  port: 0 #random port
  config:
    import: optional:configserver:http://localhost:9000
  cloud:
    gateway:
      # Gateway 공통 필터
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      # MSA 라우팅 정의
      # ID, 목적지(uri), 조건(Predicate), 필터로 구성된다.
      routes:
        - id: client-service
          # 목적지
          uri: http://192.168.0.82:client-service
          # 조건부 집합 Header나 Parameter같은 HTTP 요청의 모든 항목 비교
          # 아래와 같은 경우 localhost:8080/user 호출하게 되면 localhost:8081/user로 라우팅 된다.
          predicates:
            - Path=/user/**
          # GatewayFilter 인스턴스, Filter에서는 다운스트림 요청 전후에 요청/응답 가능
          filters:
            - name: UserFilter
              args:
                baseMessage: Taeu UserFilter
                preLogger: true
                postLogger: true
        - id: client-service2
          uri: http://192.168.0.82:client-service
          predicates:
            - Path=/shop/**
          filters:
            - name: ShopFilter
              args:
                baseMessage: Taeu ShopFilter
                preLogger: true
                postLogger: true
eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka


